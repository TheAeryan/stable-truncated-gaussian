Metadata-Version: 2.1
Name: stable-trunc-gaussian
Version: 1.0.0
Summary: A numerically-stable and differentiable implementation of the Truncated Gaussian distribution in Pytorch.
Author-email: Carlos Núñez Molina <ccaarlos@ugr.es>
License: MIT License
        
        Copyright (c) 2023 Carlos Núñez Molina
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/TheAeryan/stable-truncated-gaussian
Keywords: machine-learning,statistics,pytorch,stability
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Description-Content-Type: text/markdown
Provides-Extra: test
License-File: LICENSE

# Stable Truncated Gaussian
A **differentiable** implementation of the **Truncated Gaussian (Normal)** distribution using Python and Pytorch, which is **numerically stable** even when the *μ* parameter lies outside the interval *\[a,b\]* given by the bounds of the distribution. In this situation, a naive evaluation of the mean, variance and log-probability of the distribution could otherwise result in [catastrophic cancellation](https://en.wikipedia.org/wiki/Catastrophic_cancellation). Our code is inspired by [TruncatedNormal.jl](https://github.com/cossio/TruncatedNormal.jl) and [torch_truncnorm](https://github.com/toshas/torch_truncnorm). Currently, we only provide functionality for calculating the mean, variance and log-probability, but not for calculating the entropy or sampling from the distribution.

## Installation

Simply install with `pip`:

    pip install stable-trunc-gaussian

## Example

Run the following code in Python:

    from stable_trunc_gaussian import TruncatedGaussian as TG
    from torch import tensor as t
    
    # Create a Truncated Gaussian with mu=0, sigma=1, a=10, b=11
    # Notice how mu is outside the interval [a,b]
    dist = TG(t(0),t(1),t(10),t(11))
    
    print("Mean:", dist.mean)
    print("Variance:", dist.variance)
    print("Log-prob(10.5):", dist.log_prob(t(10.5)))
    
Result:

    Mean: tensor(10.0981)
    Variance: tensor(0.0094)
    Log-prob(10.5): tensor(-2.8126)
    
